summary(newGMP17_nom2)
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
#| echo: true
mosaicplot(cGMP17,
main ='Mosaic Plot',
color = TRUE)
#| echo: true
chisq.test(cGMP17)$expected
# running the fisher's exact test
test <- fisher.test(cGMP17)
# running the fisher's exact test
test <- fisher.test(cGMP17)
test
#| echo: true
#Selecting the variables of interest for the 2x2 table
newGMP17 <-GMP17[ -c(3) ]
head(newGMP17)
#| echo: true
#Selecting the variables of interest for the 2x2 table
newGMP17 <-GMP17[ -c(2) ]
head(newGMP17)
# Exclude rows that have missing data in both variables
newGMP17_nom <- subset(newGMP17, Gender > 0)
newGMP17_nom2 <- subset(newGMP17_nom, ObjectSearch  > 0)
summary(newGMP17_nom2)
# Renaming the Variable output
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
#| echo: true
mosaicplot(cGMP17,
main ='Mosaic Plot',
color = TRUE)
#| echo: true
chisq.test(cGMP17)$expected
# running the fisher's exact test
test <- fisher.test(cGMP17)
test
#| echo: true
test$p.value
#| echo: true
chisq.test(cGMP17)
#| echo: true
# Creating a data frame
df = data.frame (
"Drug" = c("Drug A", "Drug B", "Drug A", "Drug C", "Drug C"),
"Gender" = c("Male", "Male", "Female", "Female", "Female")
)
# Creating contingency table using table()
ctable = table(df)
print(ctable)
fisher.test(ctable)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
library(ggstatsplot)
#| code-fold: true
head(GMP17)
str(GMP17)
NROW(GMP17)
# Exclude rows that have missing data in both variables
newGMP17_nom <- subset(newGMP17, Gender > 0)
newGMP17_nom2 <- subset(newGMP17_nom, ObjectSearch  > 0)
summary(newGMP17_nom2)
nrow(newGMP17_nom2)
#| echo: true
install.packages("ggstatplot", dependencies = TRUE)
install.packages("summarytools" , dependencies = TRUE)
install.packages("gmodels", dependencies = TRUE)
install.packages("gmodels", dependencies = TRUE)
#| echo: true
#| message: false
library(gmodels)
library(ggstatsplot)
#| echo: true
install.packages("ggstatplot", dependencies = TRUE)
install.packages("summarytools" , dependencies = TRUE)
install.packages("gmodels", dependencies = TRUE)
#| echo: true
#| message: false
library(gmodels)
library(ggstatsplot)
# Example R code to create a contingency table
# Creating a data frame
df = data.frame (
"Drug" = c("Drug A", "Drug B", "Drug A"),
"Gender" = c("Male", "Male", "Female")
)
# Creating contingency table using table()
ctable = table(df)
print(ctable)
#| echo: true
GMP17 <- read.csv("dataset-gmss-2017-subset1.csv")
#| code-fold: true
head(GMP17)
str(GMP17)
NROW(GMP17)
#| echo: true
#Selecting the variables of interest for the 2x2 table
newGMP17 <-GMP17[ -c(2) ]
head(newGMP17)
# Exclude rows that have missing data in both variables
newGMP17_nom <- subset(newGMP17, Gender > 0)
newGMP17_nom2 <- subset(newGMP17_nom, ObjectSearch  > 0)
summary(newGMP17_nom2)
nrow(newGMP17_nom2)
# Renaming the Variable output
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
#| echo: true
mosaicplot(cGMP17,
main ='Mosaic Plot',
color = TRUE)
#| echo: true
chisq.test(cGMP17)$expected
# running the fisher's exact test
test <- fisher.test(cGMP17)
test
#| echo: true
test$p.value
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
# library(ggstatsplot)
ggbarstats(
cGMP17, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
install.packages("ggstatsplot")
# Renaming the Variable output
install.packages("ggstatsplot")
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
library(ggstatsplot)
install.packages("cli")
install.packages("cli")
install.packages("cli")
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
library(ggstatsplot)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
cGMP17, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
install.packages("Rmpfr")
library()
library(ggstatsplot)
sessioIfo()
sessionInfo()
# Example R code to create a contingency table
# Creating a data frame
df = data.frame (
"Drug" = c("Drug A", "Drug B", "Drug A"),
"Gender" = c("Male", "Male", "Female")
)
# Creating contingency table using table()
ctable = table(df)
print(ctable)
#| echo: true
install.packages("ggstatplot")
install.packages("summarytools")
install.packages("gmodels")
#| echo: true
GMP17 <- read.csv("dataset-gmss-2017-subset1.csv")
#| echo: true
#| message: false
library(gmodels)
library(ggstatsplot)
install.packages("ggstatsplot")
# Example R code to create a contingency table
# Creating a data frame
df = data.frame (
"Drug" = c("Drug A", "Drug B", "Drug A"),
"Gender" = c("Male", "Male", "Female")
)
# Creating contingency table using table()
ctable = table(df)
print(ctable)
install.packages("gtsummary")
#| echo: true
#| message: false
library(gmodels)
library(ggstatsplot)
library(gtsummary)
library(tidyverse)
install.packages("tidyverse")
#| echo: true
#| message: false
library(gmodels)
library(ggstatsplot)
library(gtsummary)
library(tidyverse)
#| code-fold: true
head(GMP17)
#| echo: true
GMP17 <- read.csv("dataset-gmss-2017-subset1.csv")
#| code-fold: true
head(GMP17)
str(GMP17)
NROW(GMP17)
#| echo: true
#Selecting the variables of interest for the 2x2 table
newGMP17 <-GMP17[ -c(2) ]
head(newGMP17)
# Exclude rows that have missing data in both variables
newGMP17_nom <- subset(newGMP17, Gender > 0)
newGMP17_nom2 <- subset(newGMP17_nom, ObjectSearch  > 0)
summary(newGMP17_nom2)
nrow(newGMP17_nom2)
# Renaming the Variable output
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
#| echo: true
mosaicplot(cGMP17,
main ='Mosaic Plot',
color = TRUE)
#| echo: true
chisq.test(cGMP17)$expected
# running the fisher's exact test
test <- fisher.test(cGMP17)
test
#| echo: true
test$p.value
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
cGMP17, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
newGMP17_nom2, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
newGMP17_nom2, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3)),
scale_fill_manual(values = c("#E7298A", "#66A61E"))
)
)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
newGMP17_nom2, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
test <- fisher.test(cGMP17)
table1 <- tbl_summary(test) %>%
bold_labels() %>%
bold_p() %>%
# includes caption on top of table
modify_caption("Table 1: Fisher's Exact test results")
test <- fisher.test(cGMP17)
table1 <- tbl_cross(test) %>%
bold_labels() %>%
bold_p() %>%
# includes caption on top of table
modify_caption("Table 1: Fisher's Exact test results")
test <- fisher.test(cGMP17)
table1 <- tbl_summary(test) %>%
bold_labels() %>%
bold_p() %>%
# includes caption on top of table
modify_caption("Table 1: Fisher's Exact test results")
test <- fisher.test(cGMP17)
table1 <- test %>%
tbl_summary(by= Gender) %>%
add_p() %>%
bold_labels() %>%
bold_p() %>%
# includes caption on top of table
modify_caption("Table 1: Fisher's Exact test results")
View(GMP17)
View(GMP17)
test <- fisher.test(cGMP17)
fisher.test(cGMP17[[ObjectSearch]], as.factor(cGMP17[[by= Gender]]), conf.level = 0.95)
test <- fisher.test(cGMP17)
fisher.test(cGMP17[[Gender]], as.factor(cGMP17[[by= Gender]]), conf.level = 0.95)
test <- fisher.test(cGMP17)
table1 <- test %>%
tbl_summary(by= Gender) %>%
add_p() %>%
bold_labels() %>%
bold_p() %>%
# includes caption on top of table
modify_caption("Table 1: Fisher's Exact test results")
test <- fisher.test(cGMP17)
table1 <- test %>% ungroup()
test <- fisher.test(cGMP17)
table1 <- test %>% ungroup(Gender)
test <- fisher.test(cGMP17)
table1 <- test %>% ungroup()
# Renaming the Variable output
colnames(newGMP17_nom2)[3] = "Stop and Search"
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
# Renaming the Variable output
newGMP17_nom2$Gender <-
recode_factor(
newGMP17_nom2$Gender,
"1" = "Male",
"2" = "Female"
)
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
# Renaming the Gender variable based on data dictionary
newGMP17_nom2$Gender <-
recode_factor(
newGMP17_nom2$Gender,
"1" = "Male",
"2" = "Female"
)
# Renaming the Gender variable based on data dictionary
newGMP17_nom2$ObjectSearch <-
recode_factor(
newGMP17_nom2$ObjectSearch,
"1" = "Controlled Drugs",
"2" = "Harmful Objects"
)
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
#| echo: true
mosaicplot(cGMP17,
main ='Mosaic Plot',
color = TRUE)
#| echo: true
chisq.test(cGMP17)$expected
# running the fisher's exact test
test <- fisher.test(cGMP17)
test
#| echo: true
test$p.value
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
newGMP17_nom2, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
#| echo: true
# Creating a data frame
df = data.frame (
"Drug" = c("Drug A", "Drug B", "Drug A", "Drug C", "Drug C"),
"Gender" = c("Male", "Male", "Female", "Female", "Female")
)
# Creating contingency table using table()
ctable = table(df)
print(ctable)
# Running the Fisher's Exact test for the 3x2 table
fisher.test(ctable)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
cGMP17, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
library(ggstatsplot)
ggbarstats(
cGMP17, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
#| echo: true
#install.packages("ggstatplot")
#install.packages("summarytools")
#install.packages("gmodels")
#install.packages(tidyVerse)
#| echo: true
GMP17 <- read.csv("dataset-gmss-2017-subset1.csv")
#| echo: true
#| message: false
library(gmodels)
library(ggstatsplot)
library(gtsummary)
library(tidyverse)
#| code-fold: true
head(GMP17)
str(GMP17)
# determining the number of rows
NROW(GMP17)
#| echo: true
# Dropping the Ethnicity variable to remain with variables of interest for for the 2x2 table
newGMP17 <-GMP17[ -c(2) ]
head(newGMP17)
# Exclude rows that have missing data in both variables
newGMP17_nom <- subset(newGMP17, Gender > 0)
newGMP17_nom2 <- subset(newGMP17_nom, ObjectSearch  > 0)
summary(newGMP17_nom2)
nrow(newGMP17_nom2)
# Renaming the Gender variable based on data dictionary
newGMP17_nom2$Gender <-
recode_factor(
newGMP17_nom2$Gender,
"1" = "Male",
"2" = "Female"
)
# Renaming the Gender variable based on data dictionary
newGMP17_nom2$ObjectSearch <-
recode_factor(
newGMP17_nom2$ObjectSearch,
"1" = "Controlled_Drugs",
"2" = "Harmful_Objects"
)
# Creating the contingency table for subset data
cGMP17 = table(newGMP17_nom2)
print(cGMP17)
#| echo: true
mosaicplot(cGMP17,
main ='Mosaic Plot',
color = TRUE)
#| echo: true
chisq.test(cGMP17)$expected
# running the fisher's exact test
test <- fisher.test(cGMP17)
test
#| echo: true
test$p.value
#| echo: true
# Fisher's exact test
test <- fisher.test(cGMP17)
# combine plot and statistical test with ggbarstats
ggbarstats(
newGMP17_nom2, Gender, ObjectSearch,
results.subtitle = FALSE,
subtitle = paste0(
"Fisher's exact test", ", p-value = ",
ifelse(test$p.value < 0.001, "< 0.001", round(test$p.value, 3))
)
)
#| echo: true
# Creating a data frame
df = data.frame (
"Drug" = c("Drug A", "Drug B", "Drug A", "Drug C", "Drug C"),
"Gender" = c("Male", "Male", "Female", "Female", "Female")
)
# Creating contingency table using table()
ctable = table(df)
print(ctable)
# Running the Fisher's Exact test for the 3x2 table
fisher.test(ctable)
